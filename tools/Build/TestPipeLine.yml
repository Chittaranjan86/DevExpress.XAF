variables:
  PastBuild: false
  Latest: false

trigger: none
jobs:
# - job: EasyTests
#   strategy:
#     parallel: 2
#   pool:
#     vmImage: windows-latest
#   variables:
#     - group: keys
#   steps:
#     - checkout: self
#     - task: DownloadBuildArtifacts@0
#       inputs:
#         buildType: 'specific'
#         project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
#         pipeline: '71'
#         buildVersionToDownload: 'latest'
#         downloadType: 'single'
#         artifactName: 'Tests'
#         downloadPath: '$(System.DefaultworkingDirectory)\bin'
#     - task: PowerShell@2
#       displayName: Copy runsetting
#       inputs:
#         pwsh: true
#         targetType: inline
#         script: |
#           get-childitem|select-object -expandproperty BaseName
#           Copy-Item -Path "$(System.DefaultWorkingDirectory)\tools\build\Tests.runsettings" -Destination "$(System.DefaultWorkingDirectory)\bin\Tests.runsettings" -Force -verbose
#     - task: VSTest@2
#       displayName: 'EasyTests'
#       continueOnError: true
#       inputs:
#         searchFolder: '$(System.DefaultWorkingDirectory)'
#         testSelector: 'testAssemblies'
#         testAssemblyVer2: |
#           **\*All*Tests.dll
#           !**\obj\**    
#         diagnosticsEnabled: true
#         codeCoverageEnabled: true
#         distributionBatchType: basedOnAssembly
#         runInParallel: false
#         runSettingsFile: .\bin\Tests.runsettings
#         runTestsInIsolation: false
#         collectDumpOn: never
- job: TestModules
  # dependsOn: 'EasyTests'
  strategy:
    parallel: 14
  pool:
    vmImage: windows-latest
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'specific'
        project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
        pipeline: '71'
        buildVersionToDownload: 'latest'
        downloadType: 'single'
        artifactName: 'bin'
        downloadPath: '$(System.DefaultworkingDirectory)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*AutoCommit*Tests.dll
          **\*CloneMemberValue*Tests.dll
          **\*CloneModelView*Tests.dll
          **\*Grid*Tests.dll
          **\*HideTool*Tests.dll
          **\*Logger.Tests.dll
          **\*MasterDet*Tests.dll
          **\*ModelViewIn*Tests.dll
          **\*OneView*Tests.dll
          **\*Progre*Tests.dll
          **\*Reactive*Tests.dll
          **\*Refresh*Tests.dll
          **\*Supp*Tests.dll
          **\*View*Tests.dll
          !**\*Hub*.dll
          !**\*TestAdapter.dll
          !**\obj\**    
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnAssembly
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
- job: TestModelMapper
  # dependsOn: 'TestModules'
  strategy:
    parallel: 10
  pool:
    vmImage: windows-latest
  variables:
    - group: keys
  steps:
    - checkout: none
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'specific'
        project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
        pipeline: '71'
        buildVersionToDownload: 'latest'
        downloadType: 'single'
        artifactName: 'bin'
        downloadPath: '$(System.DefaultworkingDirectory)'
    - task: VSTest@2
      displayName: 'Test Modules'
      continueOnError: true
      inputs:
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*ModelMapper*Tests.dll
          !**\obj\**    
        diagnosticsEnabled: true
        codeCoverageEnabled: true
        distributionBatchType: basedOnExecutionTime
        runInParallel: false
        runSettingsFile: .\bin\Tests.runsettings
        runTestsInIsolation: false
        collectDumpOn: never
